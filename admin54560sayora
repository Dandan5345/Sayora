<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sayora Festival - Admin Panel</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Assistant:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/html5-qrcode@2.0.9/dist/html5-qrcode.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <style>
        body {
            font-family: 'Assistant', sans-serif;
            background-color: #1a1a1a;
            color: #f0f0f0;
        }
        .modal-backdrop {
            background-color: rgba(0,0,0,0.7);
        }
        .form-input, .form-select {
            background-color: #2c2c2c;
            border: 1px solid #444;
            color: #f0f0f0;
            border-radius: 0.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #a855f7;
            box-shadow: 0 0 0 2px rgba(168, 85, 247, 0.5);
        }
        .btn-primary {
            background-color: #8b5cf6;
            transition: background-color 0.3s;
        }
        .btn-primary:hover {
            background-color: #7c3aed;
        }
        .btn-secondary {
            background-color: #4a4a4a;
            transition: background-color: 0.3s;
        }
        .btn-secondary:hover {
            background-color: #636363;
        }
        .btn-danger {
            background-color: #ef4444;
            transition: background-color: 0.3s;
        }
        .btn-danger:hover {
            background-color: #dc2626;
        }
        .toggle-bg:after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            background: white;
            border-radius: 50%;
            transition: 0.3s;
            width: 20px;
            height: 20px;
        }
        input:checked + .toggle-bg:after {
            transform: translateX(100%);
        }
        input:checked + .toggle-bg {
            background: #8b5cf6;
        }
    </style>
</head>
<body class="antialiased">

    <div id="loading-overlay" class="fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50">
        <div class="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500"></div>
    </div>

    <div class="container mx-auto p-4 md:p-8">
        <header class="flex flex-col md:flex-row justify-between items-center mb-8 border-b border-gray-700 pb-4">
            <div class="flex items-center">
                <img src="https://i.imgur.com/fYUvEiv.png" alt="Sayora Festival Logo" class="w-16 h-16 mr-4 rounded-full">
                <h1 class="text-3xl font-bold text-white">פאנל ניהול - פסטיבל Sayora</h1>
            </div>
            <div class="mt-4 md:mt-0">
                 <button id="scan-qr-btn" class="btn-primary text-white font-bold py-2 px-4 rounded-lg">
                    סרוק ברקוד
                </button>
            </div>
        </header>

        <main class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <!-- Site Management -->
            <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                <h2 class="text-2xl font-semibold mb-4 text-purple-400">ניהול אתרים</h2>
                <button id="add-site-btn" class="w-full btn-primary text-white font-bold py-2 px-4 rounded-lg mb-4">הוסף אתר חדש</button>
                <div id="sites-list" class="space-y-2 max-h-60 overflow-y-auto">
                    <!-- Sites will be dynamically inserted here -->
                </div>
            </div>

            <!-- Profile Management -->
            <div class="bg-gray-800 p-6 rounded-lg shadow-lg lg:col-span-2">
                <h2 class="text-2xl font-semibold mb-4 text-purple-400">ניהול פרופילים</h2>
                <button id="add-profile-btn" class="w-full btn-primary text-white font-bold py-2 px-4 rounded-lg mb-4">הוסף פרופיל חדש</button>
                 <div id="profiles-list" class="grid grid-cols-1 md:grid-cols-2 gap-4 max-h-96 overflow-y-auto">
                    <!-- Profiles will be dynamically inserted here -->
                </div>
            </div>
        </main>
    </div>

    <!-- Modals -->
    <!-- Add/Edit Site Modal -->
    <div id="site-modal" class="fixed inset-0 modal-backdrop items-center justify-center z-40 hidden">
        <div class="bg-gray-800 p-8 rounded-lg shadow-2xl w-full max-w-md mx-4">
            <h3 id="site-modal-title" class="text-2xl font-bold mb-6">הוסף אתר חדש</h3>
            <form id="site-form">
                <input type="hidden" id="site-id">
                <div class="mb-4">
                    <label for="site-name" class="block mb-2">שם האתר</label>
                    <input type="text" id="site-name" class="w-full p-2 form-input" required>
                </div>
                <div class="mb-6">
                    <label for="site-details" class="block mb-2">פירוט</label>
                    <textarea id="site-details" class="w-full p-2 form-input" rows="3"></textarea>
                </div>
                <div class="flex justify-end gap-4">
                    <button type="button" id="cancel-site-modal" class="btn-secondary text-white font-bold py-2 px-4 rounded-lg">ביטול</button>
                    <button type="submit" class="btn-primary text-white font-bold py-2 px-4 rounded-lg">שמור</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Add/Edit Profile Modal -->
    <div id="profile-modal" class="fixed inset-0 modal-backdrop items-center justify-center z-40 hidden">
        <div class="bg-gray-800 p-8 rounded-lg shadow-2xl w-full max-w-lg mx-4">
            <h3 id="profile-modal-title" class="text-2xl font-bold mb-6">הוסף פרופיל חדש</h3>
            <form id="profile-form">
                <input type="hidden" id="profile-id">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="mb-4">
                        <label for="profile-name" class="block mb-2">שם מלא</label>
                        <input type="text" id="profile-name" class="w-full p-2 form-input" required>
                    </div>
                    <div class="mb-4">
                        <label for="profile-manager" class="block mb-2">מנהל אחראי</label>
                        <input type="text" id="profile-manager" class="w-full p-2 form-input" required>
                    </div>
                    <div class="mb-4">
                        <label for="profile-role" class="block mb-2">תפקיד</label>
                        <input type="text" id="profile-role" class="w-full p-2 form-input" required>
                    </div>
                    <div class="mb-4">
                        <label for="profile-sites" class="block mb-2">גישה לאתרים</label>
                        <select id="profile-sites" class="w-full p-2 form-select" multiple required>
                            <!-- Site options will be dynamically inserted here -->
                        </select>
                    </div>
                     <div class="mb-4 col-span-1 md:col-span-2">
                        <label for="profile-image" class="block mb-2">תמונת פרופיל</label>
                        <input type="file" id="profile-image-input" class="w-full p-2 text-sm text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100">
                        <input type="hidden" id="profile-image-url">
                         <div id="image-upload-status" class="text-sm mt-2"></div>
                    </div>
                    <div class="mb-4 flex items-center col-span-1 md:col-span-2">
                        <label class="block mr-4">פרופיל פעיל</label>
                        <div class="relative inline-block w-12 mr-2 align-middle select-none transition duration-200 ease-in">
                            <input type="checkbox" name="toggle" id="profile-active" class="toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer" checked/>
                            <label for="profile-active" class="toggle-label block overflow-hidden h-6 rounded-full bg-gray-600 cursor-pointer toggle-bg"></label>
                        </div>
                    </div>
                </div>
                <div class="flex justify-end gap-4 mt-4">
                    <button type="button" id="cancel-profile-modal" class="btn-secondary text-white font-bold py-2 px-4 rounded-lg">ביטול</button>
                    <button type="submit" class="btn-primary text-white font-bold py-2 px-4 rounded-lg">שמור פרופיל</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- QR Code Scanner Modal -->
    <div id="scanner-modal" class="fixed inset-0 modal-backdrop items-center justify-center z-40 hidden">
        <div class="bg-gray-800 p-8 rounded-lg shadow-2xl w-full max-w-lg mx-4">
             <h3 class="text-2xl font-bold mb-6 text-center">סרוק קוד QR</h3>
            <div id="reader" class="w-full"></div>
            <div class="text-center mt-4">
                <button type="button" id="cancel-scanner-modal" class="btn-secondary text-white font-bold py-2 px-4 rounded-lg">סגור</button>
            </div>
        </div>
    </div>

    <!-- Profile Details Modal -->
    <div id="profile-details-modal" class="fixed inset-0 modal-backdrop items-center justify-center z-50 hidden">
        <div class="bg-gray-800 p-8 rounded-lg shadow-2xl w-full max-w-md mx-4 text-center">
            <div id="profile-details-content"></div>
            <div id="profile-qr-code" class="flex justify-center my-4"></div>
             <div class="text-center mt-4">
                <button type="button" id="close-profile-details-modal" class="btn-secondary text-white font-bold py-2 px-4 rounded-lg">סגור</button>
            </div>
        </div>
    </div>

    <script type="module">
        // Firebase and App imports
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
        import { 
            getFirestore, collection, addDoc, onSnapshot, doc, getDoc, 
            updateDoc, deleteDoc, query, where
        } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";
        
        // --- CONFIGURATION ---
        const firebaseConfig = {
            apiKey: "AIzaSyAUdX5OhKdNVvXTwVMF6zul6zGhldqx_s0",
            authDomain: "sayora-786c4.firebaseapp.com",
            projectId: "sayora-786c4",
            storageBucket: "sayora-786c4.firebasestorage.app",
            messagingSenderId: "353491525675",
            appId: "1:353491525675:web:0c59e5183e112e9bf84a6e",
            measurementId: "G-0L9WVPRBCE"
        };
        const IMG_BB_API_KEY = "6843513a64f543faba0c5123d2cc1f03";

        // --- INITIALIZATION ---
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        
        // --- DOM ELEMENTS ---
        const loadingOverlay = document.getElementById('loading-overlay');

        // Site elements
        const siteModal = document.getElementById('site-modal');
        const addSiteBtn = document.getElementById('add-site-btn');
        const cancelSiteModalBtn = document.getElementById('cancel-site-modal');
        const siteForm = document.getElementById('site-form');
        const sitesList = document.getElementById('sites-list');
        const siteModalTitle = document.getElementById('site-modal-title');
        
        // Profile elements
        const profileModal = document.getElementById('profile-modal');
        const addProfileBtn = document.getElementById('add-profile-btn');
        const cancelProfileModalBtn = document.getElementById('cancel-profile-modal');
        const profileForm = document.getElementById('profile-form');
        const profilesList = document.getElementById('profiles-list');
        const profileSitesSelect = document.getElementById('profile-sites');
        const imageUploadStatus = document.getElementById('image-upload-status');
        const profileImageInput = document.getElementById('profile-image-input');
        
        // Scanner and Details elements
        const scannerModal = document.getElementById('scanner-modal');
        const scanQrBtn = document.getElementById('scan-qr-btn');
        const cancelScannerModalBtn = document.getElementById('cancel-scanner-modal');
        const profileDetailsModal = document.getElementById('profile-details-modal');
        const profileDetailsContent = document.getElementById('profile-details-content');
        const closeProfileDetailsModal = document.getElementById('close-profile-details-modal');
        const profileQrCodeContainer = document.getElementById('profile-qr-code');


        let html5QrcodeScanner;

        // --- STATE ---
        let allSites = [];

        // --- HELPER FUNCTIONS ---
        const showLoading = () => loadingOverlay.style.display = 'flex';
        const hideLoading = () => loadingOverlay.style.display = 'none';
        
        // --- SITE MANAGEMENT ---
        const openSiteModal = (site = null) => {
            siteForm.reset();
            if (site) {
                siteModalTitle.textContent = 'ערוך אתר';
                document.getElementById('site-id').value = site.id;
                document.getElementById('site-name').value = site.name;
                document.getElementById('site-details').value = site.details;
            } else {
                siteModalTitle.textContent = 'הוסף אתר חדש';
                document.getElementById('site-id').value = '';
            }
            siteModal.style.display = 'flex';
        };
        const closeSiteModal = () => siteModal.style.display = 'none';

        addSiteBtn.addEventListener('click', () => openSiteModal());
        cancelSiteModalBtn.addEventListener('click', closeSiteModal);

        siteForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            showLoading();
            const id = document.getElementById('site-id').value;
            const siteData = {
                name: document.getElementById('site-name').value,
                details: document.getElementById('site-details').value
            };

            try {
                if (id) {
                    await updateDoc(doc(db, 'sites', id), siteData);
                } else {
                    await addDoc(collection(db, 'sites'), siteData);
                }
                closeSiteModal();
            } catch (error) {
                console.error("Error saving site: ", error);
                alert("שגיאה בשמירת האתר.");
            } finally {
                hideLoading();
            }
        });
        
        const renderSites = (sites) => {
            allSites = sites;
            sitesList.innerHTML = '';
            if (sites.length === 0) {
                sitesList.innerHTML = '<p class="text-gray-400">לא נמצאו אתרים. הוסף אתר חדש!</p>';
                return;
            }
            sites.forEach(site => {
                const div = document.createElement('div');
                div.className = 'bg-gray-700 p-3 rounded-md flex justify-between items-center';
                div.innerHTML = `
                    <div>
                        <p class="font-semibold">${site.name}</p>
                        <p class="text-sm text-gray-400">${site.details}</p>
                    </div>
                    <div class="flex gap-2">
                        <button class="edit-site-btn text-blue-400 hover:text-blue-300" data-id="${site.id}">ערוך</button>
                        <button class="delete-site-btn text-red-400 hover:text-red-300" data-id="${site.id}">מחק</button>
                    </div>
                `;
                sitesList.appendChild(div);
            });
            updateProfileSitesSelect(sites);
        };
        
        sitesList.addEventListener('click', async (e) => {
            const target = e.target;
            const id = target.dataset.id;
            if (target.classList.contains('delete-site-btn')) {
                if (confirm('האם אתה בטוח שברצונך למחוק אתר זה?')) {
                    await deleteDoc(doc(db, 'sites', id));
                }
            } else if (target.classList.contains('edit-site-btn')) {
                const site = allSites.find(s => s.id === id);
                if (site) openSiteModal(site);
            }
        });

        // --- PROFILE MANAGEMENT ---
        const openProfileModal = (profile = null) => {
            profileForm.reset();
            imageUploadStatus.textContent = '';
            document.getElementById('profile-image-url').value = '';

            if (profile) {
                 document.getElementById('profile-modal-title').textContent = 'ערוך פרופיל';
                 document.getElementById('profile-id').value = profile.id;
                 document.getElementById('profile-name').value = profile.name;
                 document.getElementById('profile-manager').value = profile.manager;
                 document.getElementById('profile-role').value = profile.role;
                 document.getElementById('profile-active').checked = profile.isActive;
                 document.getElementById('profile-image-url').value = profile.imageUrl || '';
                 
                 // Set selected sites
                 const siteIds = profile.sites.map(s => s.id);
                 Array.from(profileSitesSelect.options).forEach(option => {
                    option.selected = siteIds.includes(option.value);
                 });
                 if(profile.imageUrl) {
                    imageUploadStatus.innerHTML = `<a href="${profile.imageUrl}" target="_blank" class="text-blue-400">תמונה קיימת</a>`;
                 }

            } else {
                document.getElementById('profile-modal-title').textContent = 'הוסף פרופיל חדש';
                document.getElementById('profile-id').value = '';
            }
            profileModal.style.display = 'flex';
        };

        const closeProfileModal = () => profileModal.style.display = 'none';

        addProfileBtn.addEventListener('click', () => openProfileModal());
        cancelProfileModalBtn.addEventListener('click', closeProfileModal);

        profileImageInput.addEventListener('change', async (e) => {
            const file = e.target.files[0];
            if (!file) return;

            imageUploadStatus.textContent = 'מעלה תמונה...';
            showLoading();

            const formData = new FormData();
            formData.append('image', file);

            try {
                const response = await fetch(`https://api.imgbb.com/1/upload?key=${IMG_BB_API_KEY}`, {
                    method: 'POST',
                    body: formData,
                });
                const result = await response.json();
                if (result.success) {
                    document.getElementById('profile-image-url').value = result.data.display_url;
                    imageUploadStatus.innerHTML = `העלאה הצליחה! <a href="${result.data.display_url}" target="_blank" class="text-blue-400">צפה בתמונה</a>`;
                } else {
                    throw new Error(result.error.message);
                }
            } catch (error) {
                console.error('Image upload error:', error);
                imageUploadStatus.textContent = 'שגיאה בהעלאת התמונה.';
            } finally {
                hideLoading();
            }
        });

        profileForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            showLoading();
            
            const selectedOptions = Array.from(document.getElementById('profile-sites').selectedOptions);
            const sitesData = selectedOptions.map(opt => ({
                id: opt.value,
                name: opt.textContent
            }));
            
            if (sitesData.length === 0) {
                 alert('יש לבחור לפחות אתר אחד.');
                 hideLoading();
                 return;
            }

            const profileData = {
                name: document.getElementById('profile-name').value,
                manager: document.getElementById('profile-manager').value,
                role: document.getElementById('profile-role').value,
                sites: sitesData,
                isActive: document.getElementById('profile-active').checked,
                imageUrl: document.getElementById('profile-image-url').value,
            };

            const id = document.getElementById('profile-id').value;

            try {
                if (id) {
                    await updateDoc(doc(db, 'profiles', id), profileData);
                } else {
                    await addDoc(collection(db, 'profiles'), profileData);
                }
                closeProfileModal();
            } catch (error) {
                console.error("Error saving profile:", error);
                alert("שגיאה בשמירת הפרופיל.");
            } finally {
                hideLoading();
            }
        });

        const updateProfileSitesSelect = (sites) => {
            profileSitesSelect.innerHTML = '';
            sites.forEach(site => {
                const option = document.createElement('option');
                option.value = site.id;
                option.textContent = site.name;
                profileSitesSelect.appendChild(option);
            });
        };

        const renderProfiles = (profiles) => {
            profilesList.innerHTML = '';
             if (profiles.length === 0) {
                profilesList.innerHTML = '<p class="text-gray-400 text-center col-span-full">לא נמצאו פרופילים.</p>';
                return;
            }
            profiles.forEach(profile => {
                const card = document.createElement('div');
                card.className = 'bg-gray-700 p-4 rounded-lg flex items-start gap-4';
                
                const activeStatus = profile.isActive 
                    ? '<span class="text-xs text-green-400 bg-green-900 px-2 py-1 rounded-full">פעיל</span>'
                    : '<span class="text-xs text-red-400 bg-red-900 px-2 py-1 rounded-full">לא פעיל</span>';

                card.innerHTML = `
                    <img src="${profile.imageUrl || 'https://placehold.co/64x64/333/FFF?text=S'}" alt="Profile" class="w-16 h-16 rounded-full object-cover">
                    <div class="flex-grow">
                        <h4 class="font-bold text-lg">${profile.name}</h4>
                        <p class="text-sm text-purple-300">${profile.role}</p>
                        <p class="text-xs text-gray-400 mt-1">אחראי: ${profile.manager}</p>
                        <div class="mt-2">${activeStatus}</div>
                    </div>
                    <div class="flex flex-col gap-2">
                        <button class="view-profile-btn" data-id="${profile.id}">👁️</button>
                        <button class="edit-profile-btn" data-id="${profile.id}">✏️</button>
                        <button class="delete-profile-btn" data-id="${profile.id}">🗑️</button>
                    </div>
                `;
                profilesList.appendChild(card);
            });

            // Add event listeners for profile buttons
            document.querySelectorAll('.edit-profile-btn').forEach(btn => {
                btn.addEventListener('click', async (e) => {
                    const id = e.currentTarget.dataset.id;
                    const docSnap = await getDoc(doc(db, "profiles", id));
                    if (docSnap.exists()) {
                         openProfileModal({ id: docSnap.id, ...docSnap.data() });
                    }
                });
            });

            document.querySelectorAll('.delete-profile-btn').forEach(btn => {
                 btn.addEventListener('click', async (e) => {
                    const id = e.currentTarget.dataset.id;
                    if(confirm('האם אתה בטוח שברצונך למחוק פרופיל זה?')){
                        await deleteDoc(doc(db, 'profiles', id));
                    }
                });
            });

             document.querySelectorAll('.view-profile-btn').forEach(btn => {
                 btn.addEventListener('click', async (e) => {
                    const id = e.currentTarget.dataset.id;
                    const docSnap = await getDoc(doc(db, "profiles", id));
                    if (docSnap.exists()) {
                         showProfileDetails({ id: docSnap.id, ...docSnap.data() });
                    }
                });
            });
        };

        // --- SCANNER & PROFILE DETAILS ---
        const openScanner = () => {
             scannerModal.style.display = 'flex';
             html5QrcodeScanner = new Html5Qrcode("reader");
             const config = { fps: 10, qrbox: {width: 250, height: 250} };
             html5QrcodeScanner.start({ facingMode: "environment" }, config, onScanSuccess, onScanError);
        };
        
        const closeScanner = () => {
            if (html5QrcodeScanner) {
                html5QrcodeScanner.stop().catch(err => console.error("Failed to stop scanner", err));
            }
             scannerModal.style.display = 'none';
        }
        
        const onScanSuccess = async (decodedText, decodedResult) => {
            closeScanner();
            showLoading();
            try {
                const docRef = doc(db, "profiles", decodedText);
                const docSnap = await getDoc(docRef);

                if (docSnap.exists()) {
                    showProfileDetails({id: docSnap.id, ...docSnap.data()});
                } else {
                    alert("פרופיל לא נמצא.");
                }
            } catch(error) {
                console.error("Error fetching profile by ID: ", error);
                alert("שגיאה באחזור הפרופיל.");
            } finally {
                hideLoading();
            }
        };

        const onScanError = (error) => {
            // handle scan error, usually you can ignore this.
        };

        scanQrBtn.addEventListener('click', openScanner);
        cancelScannerModalBtn.addEventListener('click', closeScanner);

        const showProfileDetails = (profile) => {
             const sitesHtml = profile.sites.map(s => `<span class="bg-purple-800 text-purple-200 text-xs font-medium mr-2 px-2.5 py-0.5 rounded">${s.name}</span>`).join(' ');
             profileDetailsContent.innerHTML = `
                <img src="${profile.imageUrl || 'https://placehold.co/128x128/333/FFF?text=S'}" class="w-32 h-32 rounded-full mx-auto mb-4 object-cover border-4 border-purple-500">
                <h3 class="text-2xl font-bold">${profile.name}</h3>
                <p class="text-purple-300">${profile.role}</p>
                <p class="text-gray-400 mt-2">מנהל אחראי: ${profile.manager}</p>
                <div class="my-4">
                    ${profile.isActive 
                        ? '<p class="text-green-400">סטטוס: פעיל</p>' 
                        : '<p class="text-red-400">סטטוס: לא פעיל</p>'}
                </div>
                <div>
                    <h4 class="font-semibold mb-2">גישה לאתרים:</h4>
                    <div class="flex flex-wrap justify-center gap-2">${sitesHtml}</div>
                </div>
             `;
            
            profileQrCodeContainer.innerHTML = '';
            new QRCode(profileQrCodeContainer, {
                text: profile.id,
                width: 128,
                height: 128,
                colorDark : "#f0f0f0",
                colorLight : "#2d3748", // bg-gray-800
            });
             profileDetailsModal.style.display = 'flex';
        };

        closeProfileDetailsModal.addEventListener('click', () => {
             profileDetailsModal.style.display = 'none';
        });

        // --- REALTIME LISTENERS ---
        onSnapshot(collection(db, "sites"), (snapshot) => {
            const sites = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
            renderSites(sites);
        });

        onSnapshot(collection(db, "profiles"), (snapshot) => {
            const profiles = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
            renderProfiles(profiles);
        });

        // --- ON LOAD ---
        window.onload = () => {
            hideLoading();
        }

    </script>
</body>
</html>

